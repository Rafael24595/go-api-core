openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing projects and tasks
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging.api.example.com/v1
    description: Staging server

tags:
  - name: Authentication
    description: Endpoints related to user authentication
  - name: Projects
    description: Operations related to projects
  - name: Tasks
    description: Operations related to tasks

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates a user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /projects:
    get:
      tags:
        - Projects
      summary: Get all projects
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

    post:
      tags:
        - Projects
      summary: Create a new project
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /projects/{projectId}/tasks:
    get:
      tags:
        - Tasks
      summary: Get tasks for a project
      security:
        - BearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project
          schema:
            type: string
      responses:
        '200':
          description: A list of tasks for the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      tags:
        - Tasks
      summary: Create a new task in a project
      security:
        - BearerAuth: []
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: securepassword123

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          example: "Bearer"

    Project:
      type: object
      properties:
        id:
          type: string
          example: "proj_123"
        name:
          type: string
          example: "Website Redesign"
        description:
          type: string
          example: "Redesigning the company website"
        created_at:
          type: string
          format: date-time
          example: "2023-08-01T12:00:00Z"

    ProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Website Redesign"
        description:
          type: string
          example: "Redesigning the company website"

    Task:
      type: object
      properties:
        id:
          type: string
          example: "task_456"
        title:
          type: string
          example: "Create Wireframes"
        status:
          type: string
          enum: ["pending", "in_progress", "completed"]
          example: "pending"
        due_date:
          type: string
          format: date
          example: "2023-08-10"
        project_id:
          type: string
          example: "proj_123"

    TaskRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          example: "Create Wireframes"
        status:
          type: string
          enum: ["pending", "in_progress", "completed"]
          example: "pending"
        due_date:
          type: string
          format: date
          example: "2023-08-10"

security:
  - BearerAuth: []
